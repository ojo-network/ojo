syntax = "proto3";
package ojo.oracle.v1;

import "gogoproto/gogo.proto";
import "cosmos/base/v1beta1/coin.proto";
import "ojo/oracle/v1/oracle.proto";
import "cosmos_proto/cosmos.proto";

option go_package = "github.com/ojo-network/ojo/x/oracle/types";

option (gogoproto.goproto_getters_all) = false;

// OracleVoteExtension defines the vote extension structure used by the oracle
// module.
message OracleVoteExtension {
  int64 height = 1;
  repeated cosmos.base.v1beta1.DecCoin exchange_rates = 2 [
    (gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.DecCoins",
    (gogoproto.nullable) = false
  ];
  repeated ExternalLiquidity external_liquidity = 3 [
    (gogoproto.nullable) = false
  ];
}

// InjectedVoteExtensionTx defines the vote extension tx injected by the prepare
// proposal handler.
message InjectedVoteExtensionTx {
  repeated AggregateExchangeRateVote exchange_rate_votes = 1[
    (gogoproto.nullable) = false
  ];
  repeated ExternalLiquidity external_liquidity = 2 [
    (gogoproto.nullable) = false
  ];
  bytes extended_commit_info = 3;
}

message AssetAmountDepth {
  string asset = 1;
  string amount = 2 [
    (cosmos_proto.scalar) = "cosmos.Dec",
    (gogoproto.customtype) = "cosmossdk.io/math.LegacyDec",
    (gogoproto.nullable) = false
  ];
  string depth = 3 [
    (cosmos_proto.scalar) = "cosmos.Dec",
    (gogoproto.customtype) = "cosmossdk.io/math.LegacyDec",
    (gogoproto.nullable) = false
  ];
}

// ExternalLiquidity defines price, volume, and time information for an exchange
// rate.
message ExternalLiquidity {
  uint64 pool_id = 1;
  repeated AssetAmountDepth amount_depth_info = 2
      [ (gogoproto.nullable) = false ];
}
